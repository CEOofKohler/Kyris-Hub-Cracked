-- This file was generated using Luraph Obfuscator v13.5.9

return(function(sZ,RZ,EZ,aZ,eZ,AZ,mZ,LZ,MZ,NZ,IZ,tZ,fZ,YZ,QZ,kZ,cZ,DZ,CZ,uZ,XZ,FZ,yZ,w,...)local o,T,P,h=assert,YZ,type,(cZ.sub);local JZ,c,m,V=0X0002,nil,nil,(nil);local d,U=error,string.byte;do while-0x007e4F239d do if not(JZ<=0)then do if JZ==0X0001 then m=FZ;JZ=0x0;continue;else c=string.rep;JZ=1;continue;end;end;else V=NZ;break;end;end;end;local Q,O=setmetatable,(QZ);local E,N=getfenv,(XZ);local p=MZ.lshift;local A,Z=rawset,{[0X0]=0X0001};JZ=1;local C,X=nil,nil;repeat if JZ==0 then X=AZ;break;else C=4294967296;JZ=0;end;until(false);local t=coroutine.wrap;JZ=2;local K,F,Y,D=nil,nil,nil,(nil);while JZ<0X04 do if JZ<=1 then if JZ~=0X0 then F=string.gsub;do JZ=0X0;end;else Y=string.char;JZ=3;do continue;end;end;else if JZ~=2 then do D=tZ;end;JZ=0x4;else do K={0X7,0X4,mZ};end;JZ=1;do continue;end;end;end;end;local L=setfenv;JZ=3;local y,e,f=nil,nil,(nil);while JZ<=0X04 do if not(JZ<=0X00001)then if JZ<=2 then JZ=4;elseif JZ==0X3 then do y=E();end;JZ=1;else e=F(h(e,5),'\.\046',function(C_)do if U(C_,2)~=DZ then local oL=Y(T(C_,aZ));do if f then local uD,OD=1,(nil);while(true)do do if uD<=0x0000 then return OD;else if uD~=0X00001 then do f=nil;end;uD=0X000;else OD=c(oL,f);do uD=0X2;end;do continue;end;end;end;end;end;else return oL;end;end;else local F3=0;do repeat if F3~=0X0 then return"";else f=T(h(C_,0X1,1));F3=0X1;continue;end;until(false);end;end;end;end);JZ=5;end;else if JZ==0X0 then do eend;JZ=2;continue;else JZ=0X0;continue;end;end;end;local H=(select);do JZ=0X003;end;local s,l,k,u,I=nil,nil,nil,nil,(nil);do while JZ<=4 do if not(JZ<=0x1)then if JZ<=0x2 then k=cZ.unpack;JZ=4;continue;else if JZ==0X3 then do s=1;end;JZ=0X0001;else u=function()local aH=U(e,s,s);for nU=0X0000,0x1 do do if nU~=0 then return aH;else s=s+0X01;end;end;end;end;JZ=0X000;do continue;end;end;end;elseif JZ==0 then I=function()local aR,UR=k(LZ,e,s);do s=UR;end;return aR;end;JZ=0x05;continue;else l=kZ;do JZ=2;end;do continue;end;end;end;end;local a=unpack;local R,J=nil,nil;do for AE=0X0,1 do if AE==0x0 then R=2147483648;else J=2^0X34;end;end;end;local b=R-0x001;JZ=0;local g,B=nil,nil;do while true do if JZ<=0 then g={[9]=0.5186529294786626,[0X9]=false,[0X5]=0X8,[0X00006]="\j\~\047\087b\0507",[9]=5,[7]=false,[9]=0X6,[6]=EZ,[0x00004]=1,[2]=0X04,[0x9]=0,[0X0]=-395284254,[yZ]=0X003,[0x7]=0X00003,[0X0000]=0X3};JZ=2;continue;else if JZ~=1 then do local nd=0X002;do for ur=1,31 do local Pr=0;repeat if Pr~=0X0000 then nd=nd*2;Pr=2;continue;else(Z)[ur]=nd;Pr=0X1;end;until Pr>1;end;end;end;do JZ=0x1;end;else B=function()local MF,AF=k("<i8",e,s);s=AF;return MF;end;break;end;end;end;end;local G=(bit32.bxor);local z=(function()local YD,nD=nil,(nil);for Kj=0,2 do do if Kj<=0 then YD,nD=k("<d",e,s);else if Kj==0x1 then s=nD;continue;else return YD;end;end;end;end;end);local TZ=(function(...)do return H("\035",...),{...};end;end);local M=(rawget);JZ=1;local W,r=nil,nil;while JZ~=0X2 do do if JZ==0x00 then do r=sZ;end;do JZ=2;end;continue;else W=MZ.bnot;JZ=0X00;continue;end;end;end;local i=(C-1);local v,PZ=nil,nil;do for m7=0X0,0X001 do if m7~=0x0 then PZ=0X1;else do v=function()local oy,hy=0X0,(0X0);while'\102'do local ok=(U(e,s,s));s=s+0X1;oy=O(oy,p(l(ok,127),hy));if l(ok,0X00080)==0 then return oy;end;hy=hy+7;end;end;end;end;end;end;local x=(u());local wZ=(u());JZ=3;local oZ,S,HZ,VZ=nil,nil,nil,(nil);while JZ<=3 do if JZ<=1 then if JZ==0 then HZ=function(za)local Ka,ka=nil,nil;do for QM=0,0X3 do if not(QM<=1)then if QM~=0X2 then do s=s+Ka;end;else for IR=0x1,Ka,7997 do local mR=(0X1);local UR,TR=nil,nil;do while mR<=4 do if mR<=0X0001 then do if mR~=0X00 then UR=IR+0X1f3d-0X0001;do mR=4;end;continue;else ka=ka..Y(a(TR));mR=5;continue;end;end;elseif not(mR<=0x2)then do if mR~=3 then if not(UR>Ka)then else UR=Ka;end;mR=3;else TR={U(e,s+IR-0X01,s+UR-0X1)};mR=0X2;continue;end;end;else for rV=1,#TR do local OV=(0);do repeat if OV~=0X0 then do x=(za*x+0x95)%0x0100;end;OV=2;else(TR)[rV]=G(TR[rV],x);OV=1;end;until OV==2;end;end;mR=0X00;end;end;end;end;continue;end;else if QM==0 then Ka=I();else do ka="";end;end;end;end;end;return ka;end;JZ=0X0001;else VZ={};JZ=0X4;continue;end;else do if JZ~=2 then oZ=function(h9)local B9=({U(e,s,s+3)});local v9,O9,D9=0,nil,nil;while v9~=2 do if v9~=0 then do D9=G(B9[0X2],wZ);end;do v9=0X2;end;continue;else do O9=G(B9[1],wZ);end;v9=0X1;end;end;local j9=G(B9[3],wZ);v9=2;local s9=nil;while v9<=2 do if not(v9<=0)then do if v9~=0x1 then s9=G(B9[0x4],wZ);v9=0X001;else wZ=(105*wZ+h9)%0X0100;v9=0;end;end;else s=s+0X4;v9=0X3;end;end;return s9*16777216+j9*65536+D9*256+O9;end;JZ=2;do continue;end;else S=eZ;JZ=0;continue;end;end;end;end;local SZ,q=nil,nil;for S8=0,1 do do if S8~=0X0 then q=function()local rq=0X0;local Rq=(nil);repeat if rq==0 then Rq=v();rq=1;do continue;end;else if Rq>b then do return Rq-C;end;end;rq=0x0002;end;until rq>=0X2;return Rq;end;else SZ={};do continue;end;end;end;end;local j=(function(DH,kH,pH)local iH,bH=1,nil;while true do if not(iH<=0)then if iH==1 then bH=(DH/Z[kH])%Z[pH];iH=0X0;do continue;end;else return bH;end;else do bH=bH-bH%0X001;end;iH=2;end;end;end);local function dZ(au,Wu,Ru)local Bu,Au=Wu[6],Wu[5];local vu,tu,Ju,bu=Wu[9],Wu[0X1],Wu[0X004],(Wu[0X7]);local Lu=Wu[0X002];local Vu=(Wu[0x8]);local Pu=(Q({},{__mode='\118'}));local fu=(nil);fu=function(...)local O5=0;local S5=0X1;local j5={};local V5=(E());local G5=((V5==y and au or V5));local y5,a5=TZ(...);local U5={[0X1]=j5,[2]=Wu};y5=y5-0X001;for aI=0x0,y5 do if Au>aI then j5[aI]=a5[aI+0X00001];else break;end;end;do if not Ju then a5=nil;else if not(bu)then else(j5)[Au]={n=y5>=Au and y5-Au+1 or 0,a(a5,Au+0X1,y5+0X01)};end;end;end;do if G5==V5 then else(L)(fu,G5);end;end;local C5,Q5,d5,n5=V(function()while 0.5213379042934222 do local Nt=Lu[S5];local nt=Nt[5];S5=S5+0X0001;if not(nt>=44)then do if not(nt<22)then do if not(nt<0X0021)then do if not(nt<38)then if not(nt>=0X29)then do if not(nt<0X027)then do if nt==0x28 then local Xw=(Nt[4]);for MB=Xw,Xw+(Nt[7]-1)do j5[MB]=a5[Au+(MB-Xw)+0x1];end;else(j5)[Nt[4]]=j5[Nt[7]][Nt[0X2]];end;end;else local OZ=(Nt[0x0004]);O5=OZ+Nt[7]-1;j5[OZ](a(j5,OZ+0X00001,O5));do O5=OZ-1;end;end;end;else do if not(nt<0X00002A)then if nt~=43 then j5[Nt[0x4]]=j5[Nt[7]]*j5[Nt[0X6]];else if j5[Nt[0X00007]]==Nt[0x2]then S5=Nt[4];end;end;else do(j5)[Nt[4]]=not j5[Nt[0x7]];end;end;end;end;else do if nt>=0X23 then if not(nt<0x24)then if nt~=37 then j5[Nt[4]]=j5[Nt[7]]~=j5[Nt[6]];else do if not(j5[Nt[0X0007]]<j5[Nt[0X6]])then else do S5=Nt[0X04];end;end;end;end;else local N6,l6=Nt[4],Nt[0X7];if l6~=0 then O5=N6+l6-1;end;local U6,v6,V6=Nt[0X6],nil,nil;if l6~=0X1 then v6,V6=TZ(j5[N6](a(j5,N6+0X1,O5)));else v6,V6=TZ(j5[N6]());end;if U6==1 then O5=N6-0X0001;else if U6==0 then v6=v6+N6-1;O5=v6;else v6=N6+U6-2;O5=v6+1;end;local uA=0;for Av=N6,v6 do uA=uA+0X0001;j5[Av]=V6[uA];end;end;end;else do if nt==0X022 then j5[Nt[0x4]][Nt[0x3]]=j5[Nt[6]];else(j5)[Nt[4]]=j5[Nt[7]]^j5[Nt[0X06]];end;end;end;end;end;end;else if nt<0x1B then do if not(nt<24)then if nt<25 then local Zs=Nt[7];(j5)[Nt[4]]=j5[Zs]..j5[Zs+0x01];else do if nt==0X1A then local ci=Nt[7];local ki=j5[ci];for ux=ci+1,Nt[6]do ki=ki..j5[ux];end;(j5)[Nt[0X4]]=ki;else if not(not(j5[Nt[7]]<=Nt[2]))then else S5=Nt[0X4];end;end;end;end;else if nt~=23 then local Bv=Nt[4];j5[Bv]=j5[Bv](j5[Bv+1],j5[Bv+0X00002]);O5=Bv;else do if Nt[0X06]==0X00E9 then S5=S5-0X1;Lu[S5]={[5]=0X58,[7]=(Nt[0X0007]-31),[0X4]=(Nt[0X4]-0X1F)};else do repeat local vU,kU=Pu,j5;if#vU>0 then local Rn={};for BB,gB in m,vU do for q_,b_ in m,gB do if not(b_[1]==kU and b_[0X0002]>=0x0)then else local uv=b_[0X2];if not(not Rn[uv])then else(Rn)[uv]={kU[uv]};end;(b_)[0X1]=Rn[uv];(b_)[0X02]=1;end;end;end;end;until true;end;local r2=Nt[0x4];return false,r2,r2;end;end;end;end;end;else do if not(nt>=30)then if nt>=28 then if nt~=0X00001D then local QG=Nt[4];(j5[QG])(j5[QG+0X1],j5[QG+0X002]);O5=QG-0X01;else local sd=(Nt[4]);do j5[sd]=j5[sd](a(j5,sd+0X1,O5));end;do O5=sd;end;end;else local dU=Nt[0X4];local LU,oU=j5[dU]();if LU then for vn=1,Nt[6]do j5[dU+vn]=oU[vn];end;S5=Nt[7];end;end;else if nt>=31 then if nt==32 then local Re=(Nt[4]);local le,ye=j5[Re]();if le then j5[Re+0X1]=ye;do S5=Nt[7];end;end;else local vL=Bu[Nt[0X7]];local SL=(vL[0x3]);local WL=(nil);local LL=(#SL);if not(LL>0x0)then else WL={};for Tj=0X01,LL do local Vj=(SL[Tj]);if Vj[0X1]~=0X000 then WL[Tj-1]=Ru[Vj[0X02]];else(WL)[Tj-0X1]={j5,Vj[0X2]};end;end;X(Pu,WL);end;(j5)[Nt[4]]=dZ(G5,vL,WL);end;else j5[Nt[0X4]]=G(j5[Nt[0X0007]],j5[Nt[0X6]]);end;end;end;end;end;end;elseif not(nt>=0xb)then if nt<5 then if nt<2 then do if nt==0X1 then if Nt[6]==0X4D then S5=S5-0X0001;Lu[S5]={[0X7]=(Nt[0x7]-188),[0X4]=(Nt[0X4]-0X0000Bc),[0X005]=85};elseif Nt[0x6]==40 then do S5=S5-0X1;end;do(Lu)[S5]={[4]=(Nt[0X4]-0X6C),[7]=(Nt[7]-0X6C),[0X5]=0X00058};end;elseif Nt[0x006]==0X03C then do S5=S5-1;end;Lu[S5]={[5]=0x35,[0x007]=(Nt[0x7]-24),[4]=(Nt[4]-24)};else if not j5[Nt[0X0004]]then S5=Nt[0x7];end;end;else j5[Nt[0x4]]=false;end;end;else if nt<3 then j5[Nt[4]]=j5[Nt[0X00007]]==j5[Nt[0X006]];else if nt==0X4 then local xQ=(Nt[0X004]);local XQ,FQ=j5[xQ],j5[xQ+0x00001];local qQ=j5[xQ+2];j5[xQ]=t(function()for Bl=XQ,FQ,qQ do D(true,Bl);end;end);S5=Nt[0X7];else(j5)[Nt[4]]=j5[Nt[0X7]]<j5[Nt[0x6]];end;end;end;else if nt>=0X08 then if nt<0X009 then j5[Nt[4]]=j5[Nt[7]]%Nt[0X00002];else if nt==0X0000a then do j5[Nt[0x4]]=-j5[Nt[7]];end;else if j5[Nt[0X00007]]==j5[Nt[0x0006]]then else S5=Nt[0X4];end;end;end;else if nt>=0X006 then if nt==0X007 then local Is=(Nt[4]);local vs=(j5[Nt[7]]);j5[Is+0X001]=vs;do(j5)[Is]=vs[Nt[2]];end;else(U5)[Nt[7]]=j5[Nt[4]];end;else(j5)[Nt[4]]=l(j5[Nt[0x00007]],j5[Nt[0X6]]);end;end;end;else do if not(nt>=16)then do if nt>=0X000D then if nt>=14 then if nt~=15 then do j5[Nt[4]]=j5[Nt[7]][j5[Nt[0X006]]];end;else(j5)[Nt[4]]=SZ[Nt[7]];end;else(j5[Nt[4]])[j5[Nt[0X0007]]]=Nt[2];end;else if nt==0X0C then do SZ[Nt[7]]=j5[Nt[4]];end;else do(j5[Nt[0X4]])[j5[Nt[7]]]=j5[Nt[0X6]];end;end;end;end;else if nt<19 then if not(nt<0X11)then if nt~=0X12 then do if Nt[6]~=68 then if not(j5[Nt[4]])then else S5=Nt[0x7];end;else do S5=S5-0X1;end;Lu[S5]={[4]=(Nt[0X4]-76),[7]=(Nt[7]-76),[5]=0XA};end;end;else(j5)[Nt[0X00004]]=r(j5[Nt[0X00007]],j5[Nt[0X0006]]);end;else(j5)[Nt[0X4]]=U5[Nt[0X07]];end;else do if nt>=0X0014 then if nt==21 then j5[Nt[0X4]]=j5[Nt[7]]~=Nt[2];else if not(j5[Nt[0x7]]<=j5[Nt[6]])then S5=Nt[4];end;end;else j5[Nt[4]]={};end;end;end;end;end;end;end;else if not(nt<0x000042)then if nt>=77 then do if nt>=83 then if not(nt>=86)then if nt>=84 then if nt==0X55 then if Nt[0X6]~=0X90 then repeat local Ej,Jj=Pu,(j5);do if#Ej>0x0 then local ou={};for Sc,cc in m,Ej do for BD,FD in m,cc do if FD[1]==Jj and FD[0X2]>=0X000 then local Uf=FD[0X002];if not ou[Uf]then ou[Uf]={Jj[Uf]};end;FD[1]=ou[Uf];(FD)[2]=1;end;end;end;end;end;until true;return false,Nt[0X4],O5;else S5=S5-1;Lu[S5]={[0X00007]=(Nt[7]-110),[0X005]=49,[4]=(Nt[0X4]-0x6E)};end;else local JN=j5[Nt[0X7]]/j5[Nt[0X06]];do j5[Nt[4]]=JN-JN%1;end;end;else local xr=(Nt[0X004]);local zr,Tr=j5[xr]();if zr then do S5=Nt[0X7];end;do j5[xr+3]=Tr;end;end;end;else if not(nt<87)then do if nt==88 then local JC=(y5-Au);local WC=Nt[0x04];if JC<0 then JC=-0X01;end;do for ix=WC,WC+JC do do j5[ix]=a5[Au+(ix-WC)+1];end;end;end;O5=WC+JC;else do repeat local Lg,qg=Pu,j5;if not(#Lg>0)then else local ms=({});for FP,BP in m,Lg do for hM,nM in m,BP do if nM[1]==qg and nM[0x2]>=0X0 then local et=(nM[0x002]);if not(not ms[et])then else do ms[et]={qg[et]};end;end;nM[0X1]=ms[et];do(nM)[0X2]=0X1;end;end;end;end;end;until true;end;return true,Nt[4],0;end;end;else j5[Nt[0X4]]=j5[Nt[7]]-j5[Nt[0X6]];end;end;else if not(nt>=80)then if not(nt<78)then do if nt==79 then local In=(Ru[Nt[7]]);(In[1])[In[0X0002]]=j5[Nt[4]];else if j5[Nt[7]]==Nt[0X2]then else S5=Nt[0X4];end;end;end;else O5=Nt[4];(j5[O5])();O5=O5-0x0001;end;else do if nt>=0X51 then do if nt~=0X052 then(j5)[Nt[4]]=G5[Nt[3]];else(j5)[Nt[4]]=j5[Nt[0X7]];end;end;else do(j5)[Nt[0X4]]={a({},0X1,Nt[0X0007])};end;end;end;end;end;end;else do if nt<71 then if nt>=0x44 then do if not(nt<69)then if nt==70 then local wH=(Nt[4]);j5[wH](j5[wH+1]);O5=wH-0x1;else local T4=(Ru[Nt[0x07]]);(j5)[Nt[0x4]]=T4[1][T4[2]];end;else if j5[Nt[0X7]]~=j5[Nt[0X6]]then else S5=Nt[4];end;end;end;else if nt==67 then if Nt[0x6]==0X5f then S5=S5-1;(Lu)[S5]={[7]=(Nt[7]-227),[0X05]=0X35,[0X4]=(Nt[0x4]-0x00E3)};else repeat local QK,iK=Pu,j5;if not(#QK>0)then else local oA={};do for QQ,CQ in m,QK do for fo,no in m,CQ do if not(no[1]==iK and no[0X02]>=0)then else local u7=(no[0x002]);if not(not oA[u7])then else do(oA)[u7]={iK[u7]};end;end;no[0x00001]=oA[u7];do(no)[0X02]=0x1;end;end;end;end;end;end;until true;local lc=Nt[4];return false,lc,lc+Nt[0X7]-0X2;end;else j5[Nt[0x4]]=nil;end;end;else if nt>=0x4a then if not(nt<0X4B)then if nt==76 then do repeat local yK,XK=Pu,j5;if#yK>0X0 then local mc=({});do for Ci,zi in m,yK do for gp,wp in m,zi do do if wp[1]==XK and wp[2]>=0X000 then local kR=(wp[2]);if not mc[kR]then mc[kR]={XK[kR]};end;wp[0x1]=mc[kR];(wp)[0x2]=1;end;end;end;end;end;end;until true;end;return true,Nt[0X4],1;else do j5[Nt[0X0004]]=j5[Nt[7]]>j5[Nt[0X6]];end;end;else local Vy=(Nt[4]);(j5[Vy])(a(j5,Vy+0x1,O5));O5=Vy-0X1;end;else if not(nt<72)then if nt==0x00049 then(j5)[Nt[0x4]]=Nt[3];else local W4=(Nt[4]);local n4,l4,k4=j5[W4]();if not(n4)then else j5[W4+0X00001]=l4;j5[W4+0X0002]=k4;S5=Nt[0X7];end;end;else do j5[Nt[4]]=true;end;end;end;end;end;end;elseif nt>=55 then if nt<60 then if not(nt>=0X00039)then if nt~=0x38 then if Nt[6]~=65 then do repeat local Sn,xn,en=Pu,j5,Nt[4];if#Sn>0X000 then local DQ=({});for M3,z3 in m,Sn do for Co,zo in m,z3 do if zo[1]==xn and zo[2]>=en then local H4=zo[2];if not DQ[H4]then(DQ)[H4]={xn[H4]};end;zo[1]=DQ[H4];zo[2]=1;end;end;end;end;until true;end;else do S5=S5-1;end;Lu[S5]={[5]=67,[0x7]=(Nt[7]-0X00023),[0X4]=(Nt[0X0004]-0X0023)};end;else local AW=Nt[4];local mW,KW=j5[AW],(Nt[0X6]-1)*50;do for zY=0X001,O5-AW do mW[KW+zY]=j5[AW+zY];end;end;end;else do if nt<58 then j5[Nt[4]]=p(j5[Nt[0X00007]],j5[Nt[0x6]]);else if nt==0X3b then local DP=(Nt[4]);local sP=(t(function(...)(D)();for GQ,MQ in...do(D)(true,GQ,MQ);end;end));sP(j5[DP],j5[DP+0X01],j5[DP+2]);O5=DP;do j5[DP]=sP;end;S5=Nt[7];else do(j5)[Nt[0X4]]=j5[Nt[7]]+j5[Nt[6]];end;end;end;end;end;else do if nt>=63 then if nt>=0X40 then if nt~=65 then local ur=Nt[4];do j5[ur]=j5[ur](j5[ur+0X1]);end;O5=ur;else(j5)[Nt[4]]=j5[Nt[7]]>=j5[Nt[0x6]];end;else if Nt[6]==163 then do S5=S5-0X1;end;Lu[S5]={[7]=(Nt[0X7]-0X4c),[0X5]=0x42,[4]=(Nt[4]-76)};else j5[Nt[0x0004]]=a5[Au+0x001];end;end;else if nt>=61 then if nt~=62 then do j5[Nt[0X4]]=j5[Nt[0X0007]]<=j5[Nt[6]];end;else j5[Nt[4]][Nt[3]]=Nt[2];end;else G5[Nt[0X3]]=j5[Nt[0X4]];end;end;end;end;else if not(nt>=49)then if nt>=46 then if not(nt>=0X2f)then local Zk=Nt[4];local xk,ck=j5[Zk],(Nt[0X6]-0x1)*0X32;for lP=1,Nt[0x007]do(xk)[ck+lP]=j5[Zk+lP];end;else if nt==0x030 then if not(j5[Nt[7]]<j5[Nt[6]])then S5=Nt[0X4];end;else(j5)[Nt[0x4]]=j5[Nt[0x7]]/j5[Nt[0X6]];end;end;else if nt==45 then if j5[Nt[0X00007]]<=j5[Nt[6]]then S5=Nt[4];end;else O5=Nt[4];(j5)[O5]=j5[O5]();end;end;else if nt>=0x34 then if nt>=53 then if nt~=54 then repeat local MN,CN=Pu,j5;if#MN>0 then local Xt={};do for wB,AB in m,MN do for l1,s1 in m,AB do if s1[1]==CN and s1[0x02]>=0X0 then local AQ=(s1[0X2]);if not Xt[AQ]then(Xt)[AQ]={CN[AQ]};end;(s1)[1]=Xt[AQ];(s1)[2]=0X1;end;end;end;end;end;until true;return;else local Wz=Nt[4];local zz=t(function(...)D();do for h0 in...do(D)(true,h0);end;end;end);(zz)(j5[Wz],j5[Wz+1],j5[Wz+2]);do O5=Wz;end;(j5)[Wz]=zz;S5=Nt[0X00007];end;else do j5[Nt[0X4]]=j5[Nt[7]]%j5[Nt[6]];end;end;else if not(nt>=0x32)then if Nt[0X006]==98 then S5=S5-0X1;Lu[S5]={[5]=0X55,[7]=(Nt[7]-0X0067),[0X4]=(Nt[4]-103)};elseif Nt[0x00006]==222 then do S5=S5-0X1;end;Lu[S5]={[0x0007]=(Nt[7]-0X1),[0X4]=(Nt[0X4]-1),[5]=0x00052};else(j5)[Nt[0X4]]=#j5[Nt[0X0007]];end;else if nt~=51 then do S5=Nt[0X07];end;else do if Nt[6]~=199 then do for kF=Nt[4],Nt[0X7]do(j5)[kF]=nil;end;end;else S5=S5-0X001;(Lu)[S5]={[4]=(Nt[0X4]-0X0002),[0X5]=88,[7]=(Nt[7]-2)};end;end;end;end;end;end;end;end;end;end);if C5 then if Q5 then if n5==1 then do return j5[d5]();end;else return j5[d5](a(j5,d5+1,O5));end;else if d5 then do return a(j5,d5,n5);end;end;end;else do if P(Q5)=="string"then if N(Q5,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(N(Q5,"^.-:%d+: "))then d(Q5,0X0);else d("Luraph Script:"..(tu[S5-1]or"(internal)").."\058\ "..S(Q5),0);end;else(d)(Q5,0);end;end;end;end;L(fu,au);return fu;end;local function hZ()local Tt,Zt={},({});local st=I()-0x00D52b;local at,tt,Wt,jt=nil,nil,nil,(nil);for qP=0X000,0X3 do if not(qP<=0X1)then if qP~=0X00002 then jt=0x1;continue;else do Wt={};end;do continue;end;end;else if qP==0 then at=u();continue;else do tt={{},{},nil,nil,fZ,{},fZ,nil,fZ};end;end;end;end;local Et,Ht,vt=0X0,nil,(nil);do while'pcu'do do if Et<=0X0 then do Ht=u()~=0;end;do Et=2;end;else if Et~=0X00001 then for Mx=0X1,st do local vx=fZ;local Jx=(u());do(Tt)[Mx-0X1]=jt;end;local hx=(0X2);local ix=nil;while hx<0X5 do do if not(hx<=1)then do if hx<=2 then if Jx==0x0000dc then vx=h(HZ(at),3);elseif Jx==0X9A then vx=uZ;elseif Jx==157 then vx=h(HZ(at),z()+I());elseif Jx==0x3 then vx=h(HZ(at),I());elseif Jx==44 then do vx=h(HZ(at),11);end;elseif Jx==IZ then vx=z();elseif Jx==224 then vx=h(HZ(at),u());elseif Jx==139 then vx=B();elseif Jx==103 then vx=true;elseif Jx==65 then vx=z();end;hx=3;elseif hx~=0X03 then do if Ht then local dO=1;while dO<0X002 do if dO~=0X0 then VZ[PZ]=ix;dO=0;else PZ=PZ+0X0001;dO=0X2;do continue;end;end;end;end;end;hx=0X5;continue;else ix={vx,{}};hx=0X0000;continue;end;end;else if hx==0X00000 then(Zt)[jt]=ix;hx=0X1;continue;else do jt=jt+0X1;end;do hx=4;end;end;end;end;end;end;Et=1;else vt=u();break;end;end;end;end;end;tt[0X004]=j(vt,0x1,0X001)~=0x0;(tt)[0X7]=j(vt,0X2,1)~=0X0;local Ut=tt[6];do Et=2;end;local wt=(nil);repeat if Et<=0x2 then if not(Et<=0)then do if Et==1 then tt[0x8]=v();Et=7;continue;else wt=I()-0x41fD;Et=0X6;continue;end;end;else do(tt)[19]=u();end;Et=3;end;else if Et<=4 then do if Et==3 then(tt)[18]=I();Et=0x4;continue;else do(tt)[12]=u();end;do Et=5;end;continue;end;end;elseif Et==0x5 then(tt)[9]=v();do Et=0X1;end;else for pm=0x0,wt-0X0001 do do(Ut)[pm]=hZ();end;end;do Et=0X0;end;continue;end;end;until Et==7;local Kt=tt[0X002];local Dt=(I()-0X00018288);for Ri=1,Dt do do(Kt)[Ri]={[1]=uZ,[6]=q(),[0X00003]=false,[0X5]=v(),[EZ]=true,[0X7]=0.8266096416750057,[0x1]=u(),[0X3]=u(),[0X7]=q(),[0X2]=RZ,[0X4]=q(),[0x0002]=u()};end;end;do Et=3;end;while Et<5 do if Et<=0X1 then if Et==0 then do(tt)[0xE]=u();end;Et=0X00005;do continue;end;else do tt[0X0003]=Wt;end;Et=0X2;end;elseif Et<=2 then for vo=0x0001,v()do(Wt)[vo]={u(),v()};end;Et=0X0;continue;else if Et~=0x0003 then(tt)[0x0B]=I();do Et=0X00001;end;do continue;end;else for Op=0X1,Dt do local qp,Gp=1,(nil);while(true)do if qp~=0X0 then Gp=tt[0X002][Op];do qp=0;end;continue;else for OZ,bZ in ipairs(K)do local pZ=(g[bZ]);local lZ=(Gp[pZ]);if lZ==1 then local J4=(0x0001);local v4,U4=nil,(nil);repeat if J4==0X0 then U4=Zt[v4];J4=2;else do v4=Tt[Gp[bZ]];end;J4=0;continue;end;until J4>0X1;if U4 then local ny,Jy=0,nil;do while ny<=0x2 do if ny<=0 then(Gp)[pZ]=U4[0X01];ny=2;continue;else if ny~=1 then Jy=U4[0X2];ny=1;continue;else do Jy[#Jy+CZ]={Gp,pZ};end;ny=0X3;end;end;end;end;end;elseif lZ==12 then Gp[bZ]=Op+Gp[bZ]+1;end;end;do break;end;end;end;end;Et=4;continue;end;end;end;Et=0x03;local it=(nil);while Et~=5 do do if Et<=1 then if Et==0 then it=I();Et=5;else(tt)[0Xd]=I();Et=2;end;else if Et<=0x00002 then tt[5]=v();do Et=0;end;else if Et==0X00003 then(tt)[17]=u();do Et=4;end;else do(tt)[19]=u();end;Et=0X1;end;end;end;end;end;do for DK=0,2 do if DK<=0 then do for LM=0X1,it do local MM=I();local GM,JM=nil,(nil);for S2=0,2 do if S2<=0 then GM=I();else if S2==1 then JM=I();do continue;end;else for px=MM,GM do tt[0X1][px]=JM;end;continue;end;end;end;end;end;elseif DK==1 then(tt)[10]=u();continue;else do return tt;end;end;end;end;end;local UZ=hZ();do for uk=0X000,0x00002 do if not(uk<=0)then if uk==1 then VZ=fZ;continue;else return dZ(y,UZ,fZ)(...);end;else(SZ)[0x1]=VZ;continue;end;end;end;end)(bit32.rshift,'d\_\074\I\y\107p',2,0x00010,tostring,table.insert,6,'\<\I4',bit32,pcall,0X000031,coroutine.yield,nil,tonumber,bit32.bor,bit32.band,string,0X000048,1,false,string.match,next,8,{37317,1848937183,0X000D0fb434,0X000052D90005,0x00006808f970,0X5bd632cf,3416878819,1603422184,2768883412},...);
